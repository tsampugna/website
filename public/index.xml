<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>A simple blog</title>
    <link>/</link>
    <description>Recent content on A simple blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 18 Mar 2025 11:43:45 -0500</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Zigbee 101</title>
      <link>/posts/zigbee-101/</link>
      <pubDate>Tue, 18 Mar 2025 11:43:45 -0500</pubDate>
      
      <guid>/posts/zigbee-101/</guid>
      <description>&lt;h3 id=&#34;what-the-junk-is-zigbee&#34;&gt;What the Junk is Zigbee?:&lt;/h3&gt;
&lt;p&gt;Zigbee is a low-power, low-data-rate wireless communication protocol designed for short-range communication in &lt;strong&gt;personal area networks (PANs)&lt;/strong&gt;, particularly for &lt;strong&gt;Internet of Things (IoT)&lt;/strong&gt; devices. It operates primarily in the &lt;strong&gt;2.4 GHz ISM band&lt;/strong&gt; (International System for Microwave Communications), although it also supports frequencies in the &lt;strong&gt;868 MHz (Europe)&lt;/strong&gt; and &lt;strong&gt;915 MHz (North America)&lt;/strong&gt; bands. Zigbee is built on the &lt;strong&gt;IEEE 802.15.4&lt;/strong&gt; standard for the physical (PHY) and media access control (MAC) layers, and it provides networking, security, and application layers for higher-level communication.&lt;/p&gt;</description>
      <content>&lt;h3 id=&#34;what-the-junk-is-zigbee&#34;&gt;What the Junk is Zigbee?:&lt;/h3&gt;
&lt;p&gt;Zigbee is a low-power, low-data-rate wireless communication protocol designed for short-range communication in &lt;strong&gt;personal area networks (PANs)&lt;/strong&gt;, particularly for &lt;strong&gt;Internet of Things (IoT)&lt;/strong&gt; devices. It operates primarily in the &lt;strong&gt;2.4 GHz ISM band&lt;/strong&gt; (International System for Microwave Communications), although it also supports frequencies in the &lt;strong&gt;868 MHz (Europe)&lt;/strong&gt; and &lt;strong&gt;915 MHz (North America)&lt;/strong&gt; bands. Zigbee is built on the &lt;strong&gt;IEEE 802.15.4&lt;/strong&gt; standard for the physical (PHY) and media access control (MAC) layers, and it provides networking, security, and application layers for higher-level communication.&lt;/p&gt;
&lt;h3 id=&#34;key-features&#34;&gt;Key Features:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Low Power Consumption:&lt;/strong&gt; Zigbee is designed for devices that require long battery life, sometimes up to several years. Devices in a Zigbee network are typically &lt;strong&gt;sleeping&lt;/strong&gt; or in a &lt;strong&gt;low-power idle state&lt;/strong&gt; when not actively communicating, reducing power consumption dramatically.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mesh Networking:&lt;/strong&gt; Zigbee employs a &lt;strong&gt;mesh network topology&lt;/strong&gt;, meaning devices in the network can relay data to other devices, extending range and improving reliability. Devices can serve as routers or end devices, where routers help extend the network by passing messages between other devices. This mesh network allows &lt;strong&gt;multi-hop communication&lt;/strong&gt;, which improves network robustness and range compared to point-to-point or star topologies used in other wireless technologies like Bluetooth or Wi-Fi.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Short-Range Communication:&lt;/strong&gt; The typical communication range of a Zigbee device is about &lt;strong&gt;10-100 meters&lt;/strong&gt;, depending on environmental factors and device capabilities. The short range is suitable for home automation, sensor networks, and control applications where devices are in close proximity.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Low Data Rate:&lt;/strong&gt; Zigbee supports data rates up to &lt;strong&gt;250 kbps&lt;/strong&gt; (kilobits per second), which is suitable for the small, periodic bursts of data typically required by IoT devices. This low data rate further reduces power consumption, making it ideal for applications that donâ€™t require high throughput, such as smart thermostats or motion sensors.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Scalability:&lt;/strong&gt; A Zigbee network can theoretically support up to &lt;strong&gt;65,000 devices&lt;/strong&gt; per network, thanks to its mesh topology and the ability of devices to relay messages.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security:&lt;/strong&gt; Zigbee incorporates &lt;strong&gt;AES-128 encryption&lt;/strong&gt; for data confidentiality, integrity checks, and optional &lt;strong&gt;message authentication codes&lt;/strong&gt; (MACs) to prevent unauthorized data tampering. It also supports &lt;strong&gt;secure key establishment&lt;/strong&gt; and device authentication to ensure only trusted devices join the network.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;architecture&#34;&gt;Architecture:&lt;/h3&gt;
&lt;p&gt;The Zigbee protocol stack is layered, as shown below:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Physical Layer (PHY):&lt;/strong&gt; The physical layer defines the radio frequency (RF) characteristics for Zigbee devices. It specifies the &lt;strong&gt;modulation scheme&lt;/strong&gt;, &lt;strong&gt;frequency bands&lt;/strong&gt;, and &lt;strong&gt;transmission power levels&lt;/strong&gt;. The IEEE 802.15.4 PHY standard used by Zigbee operates in the &lt;strong&gt;2.4 GHz&lt;/strong&gt; ISM band (with worldwide availability), as well as the &lt;strong&gt;868 MHz&lt;/strong&gt; (Europe) and &lt;strong&gt;915 MHz&lt;/strong&gt; (North America) bands.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Medium Access Control Layer (MAC):&lt;/strong&gt; The MAC layer manages access to the physical radio channel. It defines mechanisms for &lt;strong&gt;collision avoidance&lt;/strong&gt;, &lt;strong&gt;packet framing&lt;/strong&gt;, and &lt;strong&gt;channel access&lt;/strong&gt; using the &lt;strong&gt;CSMA/CA&lt;/strong&gt; (Carrier Sense Multiple Access with Collision Avoidance) protocol. This layer also handles functions such as &lt;strong&gt;acknowledgments&lt;/strong&gt;, &lt;strong&gt;packet retries&lt;/strong&gt;, and &lt;strong&gt;network beacons&lt;/strong&gt; for synchronization.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Network Layer (NWK):&lt;/strong&gt; The network layer is responsible for &lt;strong&gt;network topology&lt;/strong&gt; (i.e., how devices are arranged), &lt;strong&gt;routing&lt;/strong&gt;, and &lt;strong&gt;addressing&lt;/strong&gt;. It defines the mesh routing protocol, allowing devices to communicate indirectly through intermediate devices (routers). It also handles &lt;strong&gt;network formation&lt;/strong&gt;, device joining, and &lt;strong&gt;secure communication&lt;/strong&gt;. Zigbee supports three types of devices at the network layer:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Coordinator&lt;/strong&gt;: The central device responsible for network formation and management.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Router&lt;/strong&gt;: Devices that forward data within the network.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;End Device&lt;/strong&gt;: Devices that communicate with routers or coordinators but do not route data.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Application Support Layer (APS):&lt;/strong&gt; The APS layer provides &lt;strong&gt;binding&lt;/strong&gt;, which is the process of associating devices and their capabilities. It also manages &lt;strong&gt;grouping&lt;/strong&gt; (for controlling multiple devices simultaneously) and &lt;strong&gt;device discovery&lt;/strong&gt;. This layer ensures that devices can interact with each other based on their application profiles.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Application Layer (APL):&lt;/strong&gt; The application layer defines the actual functionality and interaction between devices. This layer includes application profiles that define the behavior and communication methods for specific types of devices (e.g., lighting control, security sensors, HVAC systems). The Zigbee application layer allows devices to operate with each other seamlessly within the same network, supporting a range of use cases from home automation to industrial monitoring.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;how-zigbee-works&#34;&gt;How Zigbee Works:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Network Formation:&lt;/strong&gt; When a Zigbee network is first established, a &lt;strong&gt;coordinator&lt;/strong&gt; device is responsible for initializing the network. The coordinator defines the PAN (Personal Area Network) and assigns addresses to other devices. Devices can join the network by communicating with the coordinator or a &lt;strong&gt;router&lt;/strong&gt; device.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Device Communication:&lt;/strong&gt; In a Zigbee network, devices communicate by transmitting messages over the air. Since Zigbee uses a mesh network, messages can be forwarded by routers if the source and destination devices are not directly in range. This multi-hop communication increases reliability, as data can take multiple paths through the network to its destination.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mesh Networking:&lt;/strong&gt; Each Zigbee device that is a router can forward data to other devices in the network. If a device needs to send a message to another device that is outside its range, the message will be passed through intermediary routers until it reaches the destination device. This mesh topology ensures that devices can still communicate even if one or more devices fail or are out of range.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security:&lt;/strong&gt; When devices join the Zigbee network, they exchange security keys. Zigbee uses AES-128 encryption to encrypt data between devices. The data payload is encrypted, ensuring privacy and integrity. Zigbee also uses a &lt;strong&gt;network key&lt;/strong&gt; and &lt;strong&gt;link keys&lt;/strong&gt; to ensure that only authorized devices can communicate and that data cannot be intercepted or altered by unauthorized parties.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;applications&#34;&gt;Applications:&lt;/h3&gt;
&lt;p&gt;Zigbee is commonly used in various industries and applications, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Home Automation:&lt;/strong&gt; Smart lights, thermostats, door locks, sensors (motion, temperature, humidity).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Industrial Automation:&lt;/strong&gt; Monitoring and control of sensors and actuators in factories or facilities.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Healthcare:&lt;/strong&gt; Remote monitoring of patient health data, sensor networks for medical devices.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Energy Management:&lt;/strong&gt; Smart meters, smart grid devices for energy usage monitoring and control.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion:&lt;/h3&gt;
&lt;p&gt;Zigbee is a highly efficient and scalable wireless protocol designed for low-power, low-data-rate, and short-range communication in IoT environments. Its mesh networking capability allows for extensive device networks, and its security features provide robust protection for data transmission. Although it is not designed for high-bandwidth applications like video streaming, Zigbee excels in applications requiring long battery life, low data consumption, and reliable communication over a large number of devices.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Kasm Workspaces</title>
      <link>/posts/kasm/</link>
      <pubDate>Tue, 18 Mar 2025 11:42:17 -0500</pubDate>
      
      <guid>/posts/kasm/</guid>
      <description>&lt;h2 id=&#34;what-is-kasm-workspaces&#34;&gt;What is Kasm Workspaces?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;It&amp;rsquo;s a platform to stream your workspace directly to your web browser on any device and from any location.&lt;/li&gt;
&lt;li&gt;Browser-based access to a secure and customized work environment. Work from any location on any device.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;cloud-desktops&#34;&gt;Cloud Desktops&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Windows/Linux Desktops
&lt;ul&gt;
&lt;li&gt;Windows Enterprise deployments â€“ including Microsoft Remote Desktop Servers (RDS), Azure Virtual Desktops (AVD), Fixed Servers running Remote Desktop Protocol (RDP) to Autoscaled Cloud (AWS, Azure, GCP, OCI) and On-Prem (VMWare ESXi and OpenStack).&lt;/li&gt;
&lt;li&gt;Containerized Desktop InfrastructureÂ® (CDI) running on a shared Linux kernel for lightning fast boot times, less compute, memory and disk space. Develop pipeline automation streamlines security patches, software updates and maximizes performance.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;web-isolation&#34;&gt;Web Isolation&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Kasm Cloud Browser
&lt;ul&gt;
&lt;li&gt;Zero-Trust Browser Isolation SaaS. Keep your web browsing secure, private, and non-attributable with no risk of compromising your endpoint. A fully-patched, disposable browser that is destroyed after each use, eliminating all traces of malware, tracking cookies, browser history, browser caching, and session fingerprints.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;digital-investigations&#34;&gt;Digital Investigations&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Kasm Cloud OSINT
&lt;ul&gt;
&lt;li&gt;Open Source Intelligence and Web Research SaaS. A zero-trust web intermediary providing security and anonymity while using research and intelligence collection tools.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;remote-access&#34;&gt;Remote Access&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Eliminates the risk of direct attacks on the internal network. This removes the endpoint from your attack surface!&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;enterprise-browsers&#34;&gt;Enterprise Browsers&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;The Browser is the Application! Being self-contained environment, there is no worries about Malware and Data loss&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;app-streaming&#34;&gt;App Streaming&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Access applications directly from your browser, no install, no maintenance.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-cool-why-should-i-care-how-do-i-use-it&#34;&gt;&amp;hellip; Cool, why should I care? How do I use it?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;It&amp;rsquo;s a platform to stream your workspace directly to your web browser on any device and from any location!!&lt;/li&gt;
&lt;li&gt;Instant network obscurification!&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;pre-requirements&#34;&gt;Pre requirements:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Docker&lt;/li&gt;
&lt;li&gt;Server&lt;/li&gt;
&lt;li&gt;5 minutes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Straight from their install docs, Kasm makes it really easy to get it installed and let you start playing with it&lt;/p&gt;</description>
      <content>&lt;h2 id=&#34;what-is-kasm-workspaces&#34;&gt;What is Kasm Workspaces?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;It&amp;rsquo;s a platform to stream your workspace directly to your web browser on any device and from any location.&lt;/li&gt;
&lt;li&gt;Browser-based access to a secure and customized work environment. Work from any location on any device.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;cloud-desktops&#34;&gt;Cloud Desktops&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Windows/Linux Desktops
&lt;ul&gt;
&lt;li&gt;Windows Enterprise deployments â€“ including Microsoft Remote Desktop Servers (RDS), Azure Virtual Desktops (AVD), Fixed Servers running Remote Desktop Protocol (RDP) to Autoscaled Cloud (AWS, Azure, GCP, OCI) and On-Prem (VMWare ESXi and OpenStack).&lt;/li&gt;
&lt;li&gt;Containerized Desktop InfrastructureÂ® (CDI) running on a shared Linux kernel for lightning fast boot times, less compute, memory and disk space. Develop pipeline automation streamlines security patches, software updates and maximizes performance.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;web-isolation&#34;&gt;Web Isolation&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Kasm Cloud Browser
&lt;ul&gt;
&lt;li&gt;Zero-Trust Browser Isolation SaaS. Keep your web browsing secure, private, and non-attributable with no risk of compromising your endpoint. A fully-patched, disposable browser that is destroyed after each use, eliminating all traces of malware, tracking cookies, browser history, browser caching, and session fingerprints.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;digital-investigations&#34;&gt;Digital Investigations&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Kasm Cloud OSINT
&lt;ul&gt;
&lt;li&gt;Open Source Intelligence and Web Research SaaS. A zero-trust web intermediary providing security and anonymity while using research and intelligence collection tools.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;remote-access&#34;&gt;Remote Access&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Eliminates the risk of direct attacks on the internal network. This removes the endpoint from your attack surface!&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;enterprise-browsers&#34;&gt;Enterprise Browsers&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;The Browser is the Application! Being self-contained environment, there is no worries about Malware and Data loss&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;app-streaming&#34;&gt;App Streaming&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Access applications directly from your browser, no install, no maintenance.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-cool-why-should-i-care-how-do-i-use-it&#34;&gt;&amp;hellip; Cool, why should I care? How do I use it?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;It&amp;rsquo;s a platform to stream your workspace directly to your web browser on any device and from any location!!&lt;/li&gt;
&lt;li&gt;Instant network obscurification!&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;pre-requirements&#34;&gt;Pre requirements:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Docker&lt;/li&gt;
&lt;li&gt;Server&lt;/li&gt;
&lt;li&gt;5 minutes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Straight from their install docs, Kasm makes it really easy to get it installed and let you start playing with it&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-Standard&#34; data-lang=&#34;Standard&#34;&gt;cd /tmp
curl -O https://kasm-static-content.s3.amazonaws.com/kasm_release_1.16.1.98d6fa.tar.gz
tar -xf kasm_release_1.16.1.98d6fa.tar.gz
sudo bash kasm_release/install.sh
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;thats-it&#34;&gt;THATS IT!&lt;/h1&gt;
&lt;p&gt;You can navigate to the Web Application as soon as the script finishes!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/Pasted-image-20250208121353.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;I set up a Workspace using a couple of Images that Kasm supports out of the gate but you could really use ANY Docker image you want. The way Kasm does it is through registries. You can use the &amp;lsquo;Kasm supported&amp;rsquo; one or any 3rd party:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/Pasted-image-20250208122453.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Once you have a workspace, you&amp;rsquo;re pretty much all set to try it out!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/Pasted-image-20250208122659.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ll open up a Debian Bookworm desktop&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/Pasted-image-20250208122720.png&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;/images/Pasted-image-20250208122737.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;boom-a-fresh-desktop-i-can-use-and-then-just-throw-away-when-im-done&#34;&gt;Boom, a fresh desktop I can use and then just throw away when I&amp;rsquo;m done!&lt;/h3&gt;
&lt;p&gt;This reminds me a lot of Citrix DaaS - a product that you may see many businesses use to provide remote desktops as an alternative to having users log in with a VPN and managing BYOD. The Idea is that you can use ANY system and securely access the actual system you do stuff from, work, etc.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Integrating ProGet with Chocolatey</title>
      <link>/posts/integrating-proget-with-chocolatey-/</link>
      <pubDate>Wed, 19 Feb 2025 17:10:19 -0600</pubDate>
      
      <guid>/posts/integrating-proget-with-chocolatey-/</guid>
      <description>&lt;p&gt;If you want to use &lt;strong&gt;ProGet as a private Chocolatey repository&lt;/strong&gt;, follow these steps to &lt;strong&gt;host, push, and install Chocolatey packages&lt;/strong&gt; from ProGet.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;1-create-a-chocolatey-feed-in-proget&#34;&gt;&lt;strong&gt;1. Create a Chocolatey Feed in ProGet&lt;/strong&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Log into your ProGet Web UI&lt;/strong&gt; (&lt;code&gt;http://localhost:81&lt;/code&gt; or your configured address).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Go to&lt;/strong&gt; &lt;code&gt;Feeds&lt;/code&gt; â†’ &lt;code&gt;Create New Feed&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Select Feed Type:&lt;/strong&gt; &lt;code&gt;Chocolatey&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Give it a name&lt;/strong&gt;, e.g., &lt;code&gt;choco-packages&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Configure permissions&lt;/strong&gt; (optional) to control who can push/install packages.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Click &amp;ldquo;Create Feed&amp;rdquo;&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;2-configure-chocolatey-to-use-proget&#34;&gt;&lt;strong&gt;2. Configure Chocolatey to Use ProGet&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Run this in &lt;strong&gt;PowerShell&lt;/strong&gt; (as Admin) to add ProGet as a Chocolatey source:&lt;/p&gt;</description>
      <content>&lt;p&gt;If you want to use &lt;strong&gt;ProGet as a private Chocolatey repository&lt;/strong&gt;, follow these steps to &lt;strong&gt;host, push, and install Chocolatey packages&lt;/strong&gt; from ProGet.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;1-create-a-chocolatey-feed-in-proget&#34;&gt;&lt;strong&gt;1. Create a Chocolatey Feed in ProGet&lt;/strong&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Log into your ProGet Web UI&lt;/strong&gt; (&lt;code&gt;http://localhost:81&lt;/code&gt; or your configured address).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Go to&lt;/strong&gt; &lt;code&gt;Feeds&lt;/code&gt; â†’ &lt;code&gt;Create New Feed&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Select Feed Type:&lt;/strong&gt; &lt;code&gt;Chocolatey&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Give it a name&lt;/strong&gt;, e.g., &lt;code&gt;choco-packages&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Configure permissions&lt;/strong&gt; (optional) to control who can push/install packages.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Click &amp;ldquo;Create Feed&amp;rdquo;&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;2-configure-chocolatey-to-use-proget&#34;&gt;&lt;strong&gt;2. Configure Chocolatey to Use ProGet&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Run this in &lt;strong&gt;PowerShell&lt;/strong&gt; (as Admin) to add ProGet as a Chocolatey source:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;choco source add -n=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ProGetChoco&amp;#34;&lt;/span&gt; -s &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://proget.local/chocolatey/choco-packages/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;Replace &lt;code&gt;proget.local&lt;/code&gt; with your &lt;strong&gt;actual ProGet server URL&lt;/strong&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Verify the source was added:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;choco source list
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;3-upload-or-push-chocolatey-packages&#34;&gt;&lt;strong&gt;3. Upload or Push Chocolatey Packages&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;a-manually-upload-packages&#34;&gt;&lt;strong&gt;A. Manually Upload Packages&lt;/strong&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Download a &lt;code&gt;.nupkg&lt;/code&gt; Chocolatey package from &lt;code&gt;https://community.chocolatey.org/&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Go to your ProGet feed (&lt;code&gt;http://proget.local/chocolatey/choco-packages/&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;Upload Package&lt;/strong&gt; â†’ Select the &lt;code&gt;.nupkg&lt;/code&gt; file.&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;Upload&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;b-push-packages-using-api-key&#34;&gt;&lt;strong&gt;B. Push Packages Using API Key&lt;/strong&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Generate an API key in ProGet:
&lt;ul&gt;
&lt;li&gt;Go to &lt;code&gt;User Profile&lt;/code&gt; â†’ &lt;code&gt;API Keys&lt;/code&gt; â†’ &lt;code&gt;Create API Key&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Use this PowerShell command to push a package:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;choco push mypackage.nupkg --source http&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt;//proget.local/chocolatey/choco-packages/ --api-key YOUR_API_KEY
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;4-install-chocolatey-packages-from-proget&#34;&gt;&lt;strong&gt;4. Install Chocolatey Packages from ProGet&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Now that your packages are hosted in ProGet, install them like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;choco install mypackage -s &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://proget.local/chocolatey/choco-packages/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To make ProGet the &lt;strong&gt;default Chocolatey source&lt;/strong&gt;, remove the default Chocolatey community source:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;choco source remove -n=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;chocolatey&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;5-automate--secure&#34;&gt;&lt;strong&gt;5. Automate &amp;amp; Secure&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Enable SSL (HTTPS)&lt;/strong&gt; in IIS for security.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Restrict Access&lt;/strong&gt; by requiring authentication for Chocolatey package downloads.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Use Retention Policies&lt;/strong&gt; to clean up old package versions.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;Now you have a &lt;strong&gt;private Chocolatey repository&lt;/strong&gt; using ProGet! ðŸŽ‰&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Docker Debian Install</title>
      <link>/posts/install-docker-on-debian/</link>
      <pubDate>Sat, 08 Feb 2025 14:39:25 -0600</pubDate>
      
      <guid>/posts/install-docker-on-debian/</guid>
      <description>&lt;h4 id=&#34;add-dockers-official-gpg-key&#34;&gt;Add Docker&amp;rsquo;s official GPG key:&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-copy&#34; data-lang=&#34;copy&#34;&gt;sudo apt-get update
sudo apt-get install ca-certificates curl
sudo install -m 0755 -d /etc/apt/keyrings
sudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
sudo chmod a+r /etc/apt/keyrings/docker.asc
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;add-the-repository-to-apt-sources&#34;&gt;Add the repository to Apt sources:&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-copy&#34; data-lang=&#34;copy&#34;&gt;echo \
  &amp;#34;deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \
  $(. /etc/os-release &amp;amp;&amp;amp; echo &amp;#34;$VERSION_CODENAME&amp;#34;) stable&amp;#34; | \
  sudo tee /etc/apt/sources.list.d/docker.list &amp;gt; /dev/null
sudo apt-get update
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;install-latest-version&#34;&gt;Install latest version&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-copy&#34; data-lang=&#34;copy&#34;&gt;sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;verify-that-the-installation-is-successful-by-running-thehello-worldimage&#34;&gt;Verify that the installation is successful by running theÂ &lt;code&gt;hello-world&lt;/code&gt;Â image:&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-copy&#34; data-lang=&#34;copy&#34;&gt;sudo docker run hello-world
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This command downloads a test image and runs it in a container. When the container runs, it prints a confirmation message and exits.&lt;/p&gt;</description>
      <content>&lt;h4 id=&#34;add-dockers-official-gpg-key&#34;&gt;Add Docker&amp;rsquo;s official GPG key:&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-copy&#34; data-lang=&#34;copy&#34;&gt;sudo apt-get update
sudo apt-get install ca-certificates curl
sudo install -m 0755 -d /etc/apt/keyrings
sudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
sudo chmod a+r /etc/apt/keyrings/docker.asc
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;add-the-repository-to-apt-sources&#34;&gt;Add the repository to Apt sources:&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-copy&#34; data-lang=&#34;copy&#34;&gt;echo \
  &amp;#34;deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \
  $(. /etc/os-release &amp;amp;&amp;amp; echo &amp;#34;$VERSION_CODENAME&amp;#34;) stable&amp;#34; | \
  sudo tee /etc/apt/sources.list.d/docker.list &amp;gt; /dev/null
sudo apt-get update
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;install-latest-version&#34;&gt;Install latest version&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-copy&#34; data-lang=&#34;copy&#34;&gt;sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;verify-that-the-installation-is-successful-by-running-thehello-worldimage&#34;&gt;Verify that the installation is successful by running theÂ &lt;code&gt;hello-world&lt;/code&gt;Â image:&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-copy&#34; data-lang=&#34;copy&#34;&gt;sudo docker run hello-world
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This command downloads a test image and runs it in a container. When the container runs, it prints a confirmation message and exits.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Snatching Chucks Insane Blog Pipeline</title>
      <link>/posts/snatching-chucks-insane-blog-pipeline/</link>
      <pubDate>Fri, 07 Feb 2025 16:59:38 -0600</pubDate>
      
      <guid>/posts/snatching-chucks-insane-blog-pipeline/</guid>
      <description>&lt;p&gt;YOINK! GOT YOUR BLOG&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/Pasted-image-20250206182242.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;shoutout to NetworkChuck over at &lt;a href=&#34;https://www.youtube.com/@NetworkChuck&#34;&gt;https://www.youtube.com/@NetworkChuck&lt;/a&gt;&lt;/p&gt;</description>
      <content>&lt;p&gt;YOINK! GOT YOUR BLOG&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/Pasted-image-20250206182242.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;shoutout to NetworkChuck over at &lt;a href=&#34;https://www.youtube.com/@NetworkChuck&#34;&gt;https://www.youtube.com/@NetworkChuck&lt;/a&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Wed, 01 Jan 2025 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>&lt;h1 id=&#34;hi-there&#34;&gt;Hi there&lt;/h1&gt;
&lt;p&gt;My name is Tony and I&amp;rsquo;m the author of this simple blog. I made it to document and present cool ideas.&lt;/p&gt;
&lt;p&gt;When I&amp;rsquo;m not designing, implementing, and maintaining secure and efficient network infrastructures, supporting virtualization and cloud networking, and contributing to ensure data protection, disaster recovery, and business continuity, I&amp;rsquo;m learning anything that interests me.&lt;/p&gt;</description>
      <content>&lt;h1 id=&#34;hi-there&#34;&gt;Hi there&lt;/h1&gt;
&lt;p&gt;My name is Tony and I&amp;rsquo;m the author of this simple blog. I made it to document and present cool ideas.&lt;/p&gt;
&lt;p&gt;When I&amp;rsquo;m not designing, implementing, and maintaining secure and efficient network infrastructures, supporting virtualization and cloud networking, and contributing to ensure data protection, disaster recovery, and business continuity, I&amp;rsquo;m learning anything that interests me.&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
